

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



// User Model
model User {
  id              Int      @id @default(autoincrement())
  username        String
  email           String   @unique
  password        String?  // Make password optional for OAuth users
  phone           String?  // Make phone optional
  googleId        String?  @unique // Google OAuth ID
  avatar          String?  // Profile picture URL
  isEmailVerified Boolean  @default(false)
  authProvider    String   @default("local") // "local", "google"
  resetPasswordOTP String? // 4-digit OTP for password reset
  resetPasswordOTPExpires DateTime? // OTP expiration time
  resetPasswordToken String? // Secure token for password reset
  resetPasswordTokenExpires DateTime? // Token expiration time
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  payments Payment[]

  @@map("users")
}


// Course Model
model Course {
  id          Int    @id @default(autoincrement())
  image       String
  title       String
  description String
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  payments Payment[]

  @@map("courses")
}


// Payment Model
model Payment {
  id        Int      @id @default(autoincrement())
  userId    Int
  courseId  Int
  amount    Float
  status    String   @default("pending") // "pending" or "success"
  createdAt DateTime @default(now())

  // Relations
  user   User   @relation(fields: [userId], references: [id])
  course Course @relation(fields: [courseId], references: [id])

  @@map("payments")
}
